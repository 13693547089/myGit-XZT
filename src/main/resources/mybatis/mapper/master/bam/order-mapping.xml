<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.faujor.dao.master.bam.OrderMapper">
	<resultMap type="com.faujor.entity.bam.OrderRele" id="order">
		<result property="fid" column="FID" />
		<result property="contOrdeNumb" column="CONT_ORDE_NUMB" />
		<result property="status" column="STATUS" />
		<result property="subeDate" column="SUBE_DATE" />
		<result property="suppName" column="SUPP_NAME" />
		<result property="suppNumb" column="SUPP_NUMB" />
		<result property="buyer" column="BUYER" />
		<result property="department" column="DEPARTMENT" />
		<result property="ortype" column="ORTYPE" />
		<result property="remarks" column="REMARKS" />
		<result property="purcType" column="PURC_TYPE" />
		<result property="zzoem" column="ZZOEM" />
		<result property="enclLeng" column="ENCL_LENG" />
		<result property="releNumb" column="RELE_NUMB" />
		<result property="deliType" column="DELI_TYPE" />
		<result property="allo_status" column="ALLO_STATUS" />
		<result property="mateVolum" column="mate_volum" />
		<result property="purchOrg" column="purch_org" />
		<result property="publishId" column="publish_id" />
		<result property="publishName" column="publish_name" />
		<collection property="mates" ofType="com.faujor.entity.bam.OrderMate">
			<id property="fid" column="FID2" />
			<result property="mainId" column="MAIN_ID" />
			<result property="frequency" column="FREQUENCY" />
			<result property="mateNumb" column="MATE_NUMB" />
			<result property="prodName" column="PROD_NAME" />
			<result property="boxEntrNumb" column="BOX_ENTR_NUMB" />
			<result property="purcQuan" column="PURC_QUAN" />
			<result property="quanMate" column="QUAN_MATE" />
			<result property="unpaQuan" column="UNPA_QUAN" />
			<result property="company" column="COMPANY" />
			<result property="unitPric" column="UNIT_PRIC" />
			<result property="mone" column="MONE" />
			<result property="deliDate" column="DELI_DATE" />
			<result property="taxAmou" column="TAX_AMOU" />
			<result property="mateTex" column="MATE_TEX" />
			<result property="multRate" column="MULT_RATE" />
			<result property="factoryAddr" column="FACTORY_ADDR" />
			<result property="librPosi" column="LIBR_POSI" />
			<result property="mateVolum" column="mate_volum" />
		</collection>
	</resultMap>
	<resultMap id="enclosureMap" type="com.faujor.entity.bam.OrderEnclosure">
		<id property="fid" column="fid" />
		<result property="mainId" column="MAIN_ID" />
		<result property="appeType" column="APPE_TYPE" />
		<result property="appeName" column="APPE_NAME" />
		<result property="appeFile" column="APPE_FILE" />
		<result property="newName" column="new_name" />
		<result property="fileId" column="file_id" />
		<result property="fileUrl" column="file_url" />
	</resultMap>

	<resultMap type="com.faujor.entity.bam.OrderMate" id="mates">
		<id property="fid" column="FID" />
		<result property="mainId" column="MAIN_ID" />
		<result property="frequency" column="FREQUENCY" />
		<result property="mateNumb" column="MATE_NUMB" />
		<result property="prodName" column="PROD_NAME" />
		<result property="boxEntrNumb" column="BOX_ENTR_NUMB" />
		<result property="purcQuan" column="PURC_QUAN" />
		<result property="quanMate" column="QUAN_MATE" />
		<result property="unpaQuan" column="UNPA_QUAN" />
		<result property="company" column="COMPANY" />
		<result property="unitPric" column="UNIT_PRIC" />
		<result property="mone" column="MONE" />
		<result property="deliDate" column="DELI_DATE" />
		<result property="taxAmou" column="TAX_AMOU" />
		<result property="mateTex" column="MATE_TEX" />
		<result property="multRate" column="MULT_RATE" />
		<result property="factoryAddr" column="FACTORY_ADDR" />
		<result property="librPosi" column="LIBR_POSI" />
		<result property="mateVolum" column="mate_volum" />
		<result property="suppRange" column="supp_Range" />
		<result property="suppRangeDesc" column="supp_Range_Desc" />
	</resultMap>


	<select id="queryReleaseListByPage" parameterType="Map"
		resultMap="order">
		select s2.* from (
		select s1.*,rownum rn from (
		select bor.* from
		BAM_ORDE_RELE bor
		where 1=1
		and bor.purch_org = #{purchOrgCode}
		<if test="supply!=null and supply!=''">
			and (bor.SUPP_NUMB like #{supply} or bor.SUPP_NAME like
			#{supply})
		</if>
		<if test="Buyer!=null and Buyer!=''">
			and bor.BUYER like #{Buyer}
		</if>
		<if test="publishName != null and publishName != ''">
			and bor.publish_name like #{publishName}
		</if>
		<if test="ordeNumb!=null and ordeNumb!=''">
			and bor.CONT_ORDE_NUMB like #{ordeNumb}
		</if>
		<if test="dateSta!=null and dateEnd!=null ">
			and bor.SUBE_DATE &gt;= #{dateSta} and bor.SUBE_DATE &lt;=
			#{dateEnd}
		</if>
		<if test="orderType != null and orderType != ''">
			and bor.ORTYPE=#{orderType}
		</if>
		<if test="ordeType != null and ordeType != ''">
			and bor.STATUS=#{ordeType}
		</if>
		<if test="deliState != null and deliState != ''">
			and bor.DELI_TYPE=#{deliState}
		</if>
		<if test="suppNames != null and suppNames != ''">
			and bor.SUPP_NAME in (${suppNames})
		</if>
		<if test="purchOrg != null and purchOrg != ''">
			and bor.purch_org like #{purchOrg}
		</if>
		order by bor.sube_date desc

		)s1)s2
		<![CDATA[where s2.rn>=#{start} and s2.rn<=#{end}]]>
	</select>
	<select id="queryReleaseListByPageSupp" parameterType="Map"
		resultMap="order">
		select s2.* from (
		select s1.*,rownum rn from (
		select bor.* from
		BAM_ORDE_RELE bor
		where 1=1
		and bor.purch_org = #{purchOrgCode}
		and SUPP_NAME
		=#{supplierCode}
		and bor.status <![CDATA[ <> ]]>
		'未发布'
		<!-- <if test="supply!=null and supply!=''"> and (bor.SUPP_NUMB like #{supply}or 
			bor.SUPP_NAME like #{supply}) and bor.SUPP_NAME =#{supplierCode} </if> -->
		<if test="Buyer!=null and Buyer!=''">
			and bor.BUYER like #{Buyer}
		</if>
		<if test="publishName != null and publishName != ''">
			and bor.publish_name like #{publishName}
		</if>
		<if test="ordeNumb!=null and ordeNumb!=''">
			and bor.CONT_ORDE_NUMB like #{ordeNumb}
		</if>
		<if test="dateSta!=null and dateEnd!=null ">
			and bor.SUBE_DATE &gt;= #{dateSta} and bor.SUBE_DATE &lt;=
			#{dateEnd}
		</if>
		<if test="orderType != null and orderType != ''">
			and bor.ORTYPE = #{orderType}
		</if>
		<if test="ordeType != null and ordeType != ''">
			and bor.STATUS = #{ordeType}
		</if>
		<if test="deliState != null and deliState != ''">
			and bor.DELI_TYPE=#{deliState}
		</if>
		<if test="purchOrg != null and purchOrg != ''">
			and bor.purch_org like #{purchOrg}
		</if>
		order by bor.sube_date desc

		)s1)s2
		<![CDATA[where s2.rn>=#{start} and s2.rn<=#{end}]]>
	</select>
	<select id="queryReleaseListByPageCount" parameterType="Map"
		resultType="int">
		select count(*) from BAM_ORDE_RELE bor
		where 1=1
		and bor.purch_org = #{purchOrgCode}
		<if test="supply!=null and supply!=''">
			and (bor.SUPP_NUMB like #{supply} or bor.SUPP_NAME like
			#{supply})
		</if>
		<if test="Buyer!=null and Buyer!=''">
			and bor.BUYER like #{Buyer}
		</if>
		<if test="publishName != null and publishName != ''">
			and bor.publish_name like #{publishName}
		</if>
		<if test="ordeNumb!=null and ordeNumb!=''">
			and bor.CONT_ORDE_NUMB like #{ordeNumb}
		</if>
		<if test="dateSta!=null and dateEnd!=null ">
			and bor.SUBE_DATE &gt;= #{dateSta} and bor.SUBE_DATE &lt;=
			#{dateEnd}
		</if>
		<if test="orderType != null and orderType != ''">
			and bor.ORTYPE = #{orderType}
		</if>
		<if test="ordeType != null and ordeType != ''">
			and bor.STATUS = #{ordeType}
		</if>
		<if test="deliState != null and deliState != ''">
			and bor.DELI_TYPE=#{deliState}
		</if>
		<if test="suppNames != null and suppNames != ''">
			and bor.SUPP_NAME in (${suppNames})
		</if>
		<if test="purchOrg != null and purchOrg != ''">
			and bor.purch_org like #{purchOrg}
		</if>
	</select>

	<select id="queryReleaseListByPageCountSupp" parameterType="Map"
		resultType="int">
		select count(*) from
		BAM_ORDE_RELE bor
		where 1=1
		and bor.purch_org = #{purchOrgCode}
		and SUPP_NAME
		=#{supplierCode}
		and bor.status <![CDATA[ <> ]]>
		'未发布'
		<!-- <if test="supply!=null and supply!=''"> and (bor.SUPP_NUMB like #{supply}or 
			bor.SUPP_NAME like #{supply}) and bor.SUPP_NAME =#{supplierCode} </if> -->
		<if test="Buyer!=null and Buyer!=''">
			and bor.BUYER like #{Buyer}
		</if>
		<if test="publishName != null and publishName != ''">
			and bor.publish_name like #{publishName}
		</if>
		<if test="ordeNumb!=null and ordeNumb!=''">
			and bor.CONT_ORDE_NUMB like #{ordeNumb}
		</if>
		<if test="dateSta!=null and dateEnd!=null ">
			and bor.SUBE_DATE &gt;= #{dateSta} and bor.SUBE_DATE &lt;=
			#{dateEnd}
		</if>
		<if test="orderType != null and orderType != ''">
			and bor.ORTYPE = #{orderType}
		</if>
		<if test="ordeType != null and ordeType != ''">
			and bor.STATUS = #{ordeType}
		</if>
		<if test="deliState != null and deliState != ''">
			and bor.DELI_TYPE=#{deliState}
		</if>
		<if test="purchOrg != null and purchOrg != ''">
			and bor.purch_org like #{purchOrg}
		</if>
	</select>

	<!-- <select id="queryOrderReleByFid" parameterType="String" resultMap="order"> 
		select BOR.*,BOA.*,BOM.FID FID2,BOM.MAIN_ID,BOM.FREQUENCY,BOM.MATE_NUMB,BOM.PROD_NAME, 
		BOM.BOX_ENTR_NUMB,BOM.PURC_QUAN,BOM.QUAN_MATE,BOM.UNPA_QUAN,BOM.COMPANY, 
		BOM.UNIT_PRIC,BOM.MONE,BOM.DELI_DATE from BAM_ORDE_RELE BOR LEFT JOIN BAM_ORDE_MATE 
		BOM ON BOR.FID= BOM.MAIN_ID left join BAM_ORDE_ATTA BOA ON BOR.FID= BOA.MAIN_ID 
		where bor.fid=#{fid} </select> -->
	<!-- <select id="queryOrderReleByFid" parameterType="String" resultMap="order"> 
		select BOR.*,BOA.*,BOM.FID FID2,BOM.MAIN_ID,BOM.FREQUENCY,BOM.MATE_NUMB,BOM.PROD_NAME,BOM.TAX_AMOU, 
		BOM.BOX_ENTR_NUMB,BOM.PURC_QUAN,BOM.QUAN_MATE,BOM.UNPA_QUAN,BOM.COMPANY, 
		BOM.UNIT_PRIC,BOM.MONE,BOM.DELI_DATE,BOA.FID FID3,BOA.MAIN_ID,BOA.APPE_TYPE,BOA.APPE_NAME,BOA.APPE_NAME,BOA.NEW_NAME,BOA.FILE_ID,BOA.FILE_URL 
		from BAM_ORDE_RELE BOR LEFT JOIN BAM_ORDE_MATE BOM ON BOR.CONT_ORDE_NUMB 
		= BOM.MAIN_ID left join BAM_ORDE_ATTA BOA ON BOR.FID= BOA.MAIN_ID where bor.fid=#{fid} 
		</select> -->
	<select id="queryOrderReleByFid" parameterType="String"
		resultMap="order">
		select BOR.FID, bor.cont_orde_numb, bor.status,
		bor.sube_date, bor.supp_name, bor.buyer, bor.department, bor.ortype,
		bor.remarks, bor.encl_leng, bor.mate_volum, BOM.FID FID2, BOM.MAIN_ID,
		BOM.FREQUENCY, BOM.MATE_NUMB, BOM.PROD_NAME, BOM.TAX_AMOU,
		BOM.BOX_ENTR_NUMB, BOM.PURC_QUAN, BOM.QUAN_MATE, BOM.UNPA_QUAN,
		BOM.COMPANY, BOM.UNIT_PRIC, BOM.MONE, BOM.DELI_DATE, BOM.MATE_TEX,
		BOM.MULT_RATE, bom.mate_volum, BOA.FID FID3, BOA.MAIN_ID as MAIN_ID3,
		BOA.APPE_TYPE, BOA.APPE_FILE, BOA.APPE_NAME, BOA.NEW_NAME,
		BOA.FILE_ID, BOA.FILE_URL, qs.supp_name supp_numb from BAM_ORDE_RELE
		BOR LEFT JOIN BAM_ORDE_MATE BOM ON BOR.CONT_ORDE_NUMB = BOM.MAIN_ID
		left join BAM_ORDE_ATTA BOA ON BOR.FID= BOA.MAIN_ID left join
		mdm_qual_supp qs on BOR.SUPP_NAME=qs.sap_id where bor.fid=#{Fid} ORDER
		BY BOM.FREQUENCY
	</select>
	<select id="updateLatentSuppBySuppId" parameterType="String"
		resultMap="order">
		update BAM_ORDE_RELE set STATUS = '已回签' where fid=#{fid}
	</select>
	<select id="updatePurchaseOrderId" parameterType="com.faujor.entity.bam.OrderRele"
		resultMap="order">
		update BAM_ORDE_RELE set STATUS = '未发布',REMARKS=
		#{remarks},ENCL_LENG=#{enclLeng},limit_than=#{limitThan} where
		fid=#{fid}
	</select>
	<insert id="insertOrder" parameterType="com.faujor.entity.bam.OrderEnclosure">
		insert into
		BAM_ORDE_ATTA(FID,MAIN_ID,APPE_TYPE,APPE_NAME,APPE_FILE,new_name,file_url,file_id)values(lower(sys_guid()),#{mainId},#{appeType},#{appeName},#{appeFile},#{newName},#{fileUrl},#{fileId})
	</insert>
	<delete id="setDeleteEncl">
		delete from BAM_ORDE_ATTA where file_id=#{docId}
	</delete>
	<!-- 插入主表数据 -->
	<insert id="setTopList" parameterType="com.faujor.entity.bam.OrderRele1">
		<selectKey keyProperty="fid" resultType="java.lang.String"
			order="BEFORE">
			select lower(sys_guid()) from dual
		</selectKey>
		insert into
		BAM_ORDE_RELE(FID, CONT_ORDE_NUMB, STATUS, SUBE_DATE,
		SUPP_NAME, ORTYPE, SUPP_NUMB, BUYER, ZZOEM, RELE_NUMB, DELI_TYPE,
		MATE_VOLUM, PURCH_ORG)
		values
		(lower(sys_guid()), #{contOrdeNumb},
		'未发布',
		#{subeDate}, #{suppName}, #{BSART}, #{suppNumb}, #{buyer},
		#{zzoem},
		#{releNumb}, #{deliType}, #{mateVolum}, #{purchOrg})
	</insert>
	<insert id="setTopDetail" parameterType="com.faujor.entity.bam.OrderMate1">
		<selectKey keyProperty="fid" resultType="java.lang.String"
			order="BEFORE">
			select lower(sys_guid()) from dual
		</selectKey>
		insert into
		BAM_ORDE_MATE(FID, MAIN_ID, FREQUENCY, MATE_NUMB,
		PURC_QUAN, COMPANY, UNIT_PRIC, MONE, DELI_DATE, TAX_AMOU, PROD_NAME,
		BOX_ENTR_NUMB, QUAN_MATE, UNPA_QUAN, MATE_TEX, MULT_RATE,
		FACTORY_ADDR, LIBR_POSI, mate_volum,supp_range,supp_range_desc)
		values
		(lower(sys_guid()),
		#{mainId},
		#{frequency}, #{mateNumb}, #{purcQuan}, #{company},
		#{unitPric},
		#{NETWR}, #{deliDate}, #{taxAmou}, #{prodName},
		#{boxEntrNumb},
		#{zwmenge}, #{menge}, #{mateTax}, #{peinh}, #{werks},
		#{lgort}, #{mateVolum},#{suppRange},#{suppRangeDesc})
	</insert>
	<select id="findNoMateOrder" resultType="String">
		select t.cont_orde_numb
		from bam_orde_rele t where not exists
		(select * from bam_orde_mate a
		where t.cont_orde_numb = a.main_id)
	</select>
	<resultMap type="com.faujor.entity.bam.OrderRele" id="orderReleMap">
		<result property="contOrdeNumb" column="cont_orde_numb"/>
		<result property="suppName" column="supp_name"/>
	</resultMap>
	<select id="findNoMateOrder2" resultMap="orderReleMap">
		select t.cont_orde_numb,t.supp_name
		from bam_orde_rele t where not exists
		(select * from bam_orde_mate a
		where t.cont_orde_numb = a.main_id)
	</select>
	<insert id="batchSaveTopDetails" parameterType="list">
		insert all into BAM_ORDE_MATE (FID, MAIN_ID, FREQUENCY, MATE_NUMB,
		PURC_QUAN, COMPANY, UNIT_PRIC, MONE, DELI_DATE, TAX_AMOU, PROD_NAME,
		BOX_ENTR_NUMB, QUAN_MATE, UNPA_QUAN, MATE_TEX, MULT_RATE,
		FACTORY_ADDR, LIBR_POSI, mate_volum,supp_range,supp_range_desc) values
		<foreach collection="list" item="item" index="index" open=""
			close=""
			separator="into BAM_ORDE_MATE (FID, MAIN_ID, FREQUENCY, MATE_NUMB, 
			PURC_QUAN, COMPANY, UNIT_PRIC, MONE, DELI_DATE, TAX_AMOU, PROD_NAME, 
			BOX_ENTR_NUMB, QUAN_MATE, UNPA_QUAN, MATE_TEX, MULT_RATE,
			FACTORY_ADDR, LIBR_POSI, mate_volum,supp_range,supp_range_desc) values">
			(#{item.fid}, #{item.mainId}, #{item.frequency},
			#{item.mateNumb}, #{item.purcQuan}, #{item.company},
			#{item.unitPric}, #{item.NETWR}, #{item.deliDate}, #{item.taxAmou},
			#{item.prodName}, #{item.boxEntrNumb}, #{item.zwmenge},
			#{item.menge}, #{item.mateTax}, #{item.peinh}, #{item.werks},
			#{item.lgort}, #{item.mateVolum},#{item.suppRange},#{item.suppRangeDesc})
		</foreach>
		select 1 from dual
	</insert>
	<select id='queryOrderMate' parameterType="String" resultMap="mates">
		select * from BAM_ORDE_MATE where MAIN_ID=#{OrdeNumb}

	</select>
	<select id="queryContOrdeNumb" parameterType="String"
		resultType="String">
		select fid from BAM_ORDE_RELE WHERE
		CONT_ORDE_NUMB =
		#{OrdeNumb}
	</select>
	<delete id='deleteMateList'>
		delete from BAM_ORDE_MATE where MAIN_ID =
		#{ContOrdeNumb}
	</delete>

	<update id="updateTopOrderRele" parameterType="com.faujor.entity.bam.OrderRele1">
		update
		BAM_ORDE_RELE t set t.zzoem = #{zzoem}, t.remarks = #{remarks},
		t.RELE_NUMB=#{releNumb}, t.DELI_TYPE=#{deliType}, t.MATE_VOLUM =
		#{mateVolum}, t.purch_org = #{purchOrg}, t.supp_name = #{suppName},
		t.supp_numb = #{suppNumb} where t.fid = #{fid}
	</update>
	<select id="queryOrderReleOfQualSupp" parameterType="String"
		resultMap="order">
		select bor.*,bom.fid
		fid2,bom.main_id,bom.frequency,bom.mate_numb,
		bom.prod_name,bom.box_entr_numb,bom.purc_quan,bom.quan_mate,bom.unpa_quan,bom.company,
		bom.unit_pric,bom.mone,bom.deli_date,bom.tax_amou
		from bam_orde_rele
		bor left join bam_orde_mate bom on bor.cont_orde_numb=bom.main_id
		where bor.ortype in('Z001','Z008','Z009') and
		bor.supp_name=#{sapId}
	</select>

	<select id="queryOrderMateByContOrdeNumb" parameterType="String"
		resultMap="mates">
		select bom.fid fid,bom.main_id,bom.frequency,bom.mate_numb,
		bom.prod_name,bom.box_entr_numb,bom.purc_quan,bom.quan_mate,bom.unpa_quan,bom.company,
		bom.unit_pric,bom.mone,bom.deli_date,bom.tax_amou, bom.mate_volum from
		bam_orde_mate
		bom
		where bom.main_id=#{contOrdeNumb}
	</select>

	<select id="querycontOrdeNumbOfOrderReleBySapIdAndMateCode" parameterType="Map"
		resultMap="order">
		select * from (
		select a.*,rownum rn from (
		select * from (
		select * from
		bam_orde_rele bor left join bam_orde_mate bom on
		bor.cont_orde_numb =
		bom.main_id
		where bor.supp_name=#{sapId} and
		bom.mate_numb=#{mateCode} and
		bom.unpa_quan is not null 
		and bom.unpa_quan !='0'
		<if test="suppRange != null and suppRange != '' ">
			and bom.supp_Range = #{suppRange}
		</if>
		<if test="suppRange == null or suppRange == '' ">
			and (bom.supp_Range is null or bom.supp_Range = '' or bom.supp_Range = ' ')
		</if>
		) b left join bam_deli_mate bdm on b.cont_orde_numb =
		bdm.order_id
		and b.mate_numb = bdm.mate_code
		where ( bdm.deli_number !=
		bdm.calcul_number
		or bdm.calcul_number is null)
		order by
		b.sube_date)a)b
		where b.rn=#{orderNum}
	</select>

	<select id="queryOrderReleBySapIdAndMateCode" parameterType="Map" resultMap="order">
		select *
		from (
		select a.*,rownum rn from (
		select * from
		bam_orde_rele bor left
		join bam_orde_mate bom on
		bor.cont_orde_numb =
		bom.main_id
		where
		bor.supp_name=#{sapId} and
		bom.mate_numb=#{mateCode} and
		bom.unpa_quan is not null
		and bom.unpa_quan !='0'
		<if test="suppRange != null and suppRange != '' ">
			and bom.supp_Range = #{suppRange}
		</if>
		<if test="suppRange == null or suppRange == '' ">
			and (bom.supp_Range is null or bom.supp_Range = '' or bom.supp_Range = ' ')
		</if>
		order by bor.sube_date)a)b
		where b.rn=#{orderNum}
	</select>
	<select id="findOrderListBySapIdAndMateCode" parameterType="String"
		resultMap="order">
		select * from bam_orde_rele bor left join bam_orde_mate bom
		on bor.cont_orde_numb = bom.main_id 
		where bor.supp_name=#{sapId} 
		and bom.mate_numb=#{mateCode} 
		and bom.unpa_quan is not null 
		and bom.unpa_quan!='0' 
		<if test="suppRange != null and suppRange != '' ">
			and bom.supp_range = #{suppRange}
		</if>
		<if test="suppRange == null or suppRange == '' ">
			and (bom.supp_range is null or bom.supp_range ='' or bom.supp_range =' ')
		</if>
		order by bor.CONT_ORDE_NUMB asc
	</select>

	<resultMap type="com.faujor.entity.bam.OrderRele" id="orderMap">
		<result property="fid" column="FID" />
		<result property="contOrdeNumb" column="CONT_ORDE_NUMB" />
		<result property="status" column="STATUS" />
		<result property="subeDate" column="SUBE_DATE" />
		<result property="suppName" column="SUPP_NAME" />
		<result property="suppNumb" column="SUPP_NUMB" />
		<result property="buyer" column="BUYER" />
		<result property="department" column="DEPARTMENT" />
		<result property="ortype" column="ORTYPE" />
		<result property="remarks" column="REMARKS" />
		<result property="purcType" column="PURC_TYPE" />
		<result property="zzoem" column="ZZOEM" />
		<result property="enclLeng" column="ENCL_LENG" />
		<result property="releNumb" column="RELE_NUMB" />
		<result property="deliType" column="DELI_TYPE" />
		<result property="limitThan" column="limit_Than" />
	</resultMap>
	<select id="findOrderReleByOrderRele" parameterType="com.faujor.entity.bam.OrderRele"
		resultMap="orderMap">
		select * from bam_orde_rele
		<where>
			<if test="contOrdeNumb != null and contOrdeNumb !=''">
				and cont_orde_numb = #{contOrdeNumb}
			</if>
			<if test="fid != null and fid != ''">
				and fid = #{fid}
			</if>
		</where>
	</select>
	<update id="updateAlloOrderStatus" parameterType="map">
		update bam_orde_rele t set t.ALLO_STATUS = #{alloStatus}
		<where>
			<if test="alloNo != null and alloNo != ''">
				t.CONT_ORDE_NUMB = #{alloNo}
			</if>
			<if test="messIds != null">
				t.CONT_ORDE_NUMB in (select q.allo_no from BAM_MESSAGE q where
				q.mess_id in
				<foreach collection="messIds" item="item" index="index"
					open="(" separator="," close=")">
					#{item}
				</foreach>
				)
			</if>
		</where>
	</update>

	<select id="findOrderMateByOrderNoAndMateCode" resultMap="mates"
		parameterType="String">
		select * from bam_orde_mate t where t.MATE_NUMB = #{1}
		and t.MAIN_ID = #{0}
	</select>

	<select id="findOrderMateByOrderNo" resultMap="mates"
		parameterType="String">
		select * from bam_orde_mate t where t.main_id =
		#{orderNo} order by t.frequency
	</select>
	<select id="findOrderEnclosureByOrderNo" resultMap="enclosureMap"
		parameterType="String">
		select * from BAM_ORDE_ATTA t where t.main_id =
		#{orderNo}
	</select>

	<select id="findOrderReleByOrderReleDO" resultMap="order"
		parameterType="com.faujor.entity.bam.OrderReleDO">
		select * from bam_orde_rele t
		<where>
			and t.ortype = 'NB'
			<if test="zzoem != null and zzoem != ''">
				and t.status !='未发布'
			</if>
			<if test="suppName != null and suppName != ''">
				and (t.supp_name like concat('%', concat(#{suppName},
				'%'))
				or t.supp_numb like concat('%', concat(#{suppName}, '%')))
			</if>
			<if test="publishName != null and publishName != ''">
				and t.publish_name like concat('%',
				concat(#{publishName}, '%'))
			</if>
			<if test="contOrdeNumb != null and contOrdeNumb != ''">
				and t.cont_orde_numb like concat('%',
				concat(#{contOrdeNumb}, '%'))
			</if>
			<if test="startDate != null ">
				and t.sube_date &gt;= #{startDate}
			</if>
			<if test="endDate != null ">
				and t.sube_date &lt;= #{endDate}
			</if>
			<if test="status != null and status != ''">
				and t.status = #{status}
			</if>
			<if test="deliType != null and deliType != ''">
				and t.deli_type = #{deliType}
			</if>
			<if test="purchOrg != null and purchOrg != ''">
				and t.purch_org like concat('%', concat(#{purchOrg},
				'%'))
			</if>
			<if test="remarks != null and remarks != ''">
				and t.SUPP_NAME in (${remarks})
			</if>
		</where>
	</select>

	<delete id="removeOrderByOrderNO" parameterType="String">
		delete from
		bam_orde_rele t where t.CONT_ORDE_NUMB = #{0}
	</delete>


	<resultMap type="com.faujor.entity.bam.OrderDO" id="orderDO">
		<result property="fid" column="fid" />
		<result property="contOrdeNumb" column="CONT_ORDE_NUMB" />
		<result property="subeDate" column="SUBE_DATE" />
		<result property="mateNumb" column="MATE_NUMB" />
		<result property="unpaQuan" column="UNPA_QUAN" />
		<result property="company" column="COMPANY" />
		<result property="frequency" column="frequency" />
	</resultMap>
	<select id="queryAllOrderOfMate" resultMap="orderDO">
		select * from
		bam_orde_rele bor left join bam_orde_mate bom
		on bor.cont_orde_numb =
		bom.main_id
		where bor.supp_name=#{0}
		and bom.mate_numb=#{1}
		and
		bom.unpa_quan is not null
		and bom.unpa_quan
		!='0'
		order by bor.sube_date
	</select>

	<select id="getUnpaidNum" parameterType="Map" resultType="Double">
		select nvl(sum(t1.unpa_quan),0)
		from BAM_ORDE_mate t1
		left join
		BAM_ORDE_RELE t2
		on t1.main_id = t2.cont_orde_numb
		<where>
			<if test="suppNo!=null and suppNo!=''">
				and t2.supp_name = #{suppNo}
			</if>
			<if test="mateCode!=null and mateCode!=''">
				and t1.mate_numb = #{mateCode}
			</if>
			<if test="planMonth!=null">
				and t2.sube_date &lt; #{planMonth}
			</if>
		</where>
	</select>

	<!-- 获取主表Fid -->
	<select id="getOrderFid" resultType="String">
		select FID from
		bam_orde_rele where CONT_ORDE_NUMB =#{fid}
	</select>



	<select id="queryOrderReleOfQualSuppByPage" parameterType="Map"
		resultMap="order">
		select s2.* from (
		select s1.*,rownum rn from (
		select bor.*
		from
		bam_orde_rele bor 
		<![CDATA[where (bor.ALLO_STATUS is null)]]>
		and bor.supp_name=#{sapId}
		and bor.ortype in('Z001','Z008','Z009')
		and
		bor.zzoem = #{zzoem}
		<if test="orderRele.zzoem != null and orderRele.zzoem != '' ">
			and bor.zzoem like '%${orderRele.zzoem}%'
		</if>
		<if test="orderRele.contOrdeNumb != null and orderRele.contOrdeNumb != '' ">
			and bor.CONT_ORDE_NUMB like '%${orderRele.contOrdeNumb}%'
		</if>
		<if test="orderRele.startDate != null or orderRele.endDate != null ">
			and bor.sube_date between
			#{orderRele.startDate,jdbcType=VARCHAR} and
			#{orderRele.endDate,jdbcType=VARCHAR}
		</if>
		order by bor.cont_orde_numb )s1)s2
		<![CDATA[where s2.rn>=#{start} and s2.rn <=#{end}]]>
	</select>

	<select id="queryOrderReleOfQualSuppByPageCount" parameterType="Map"
		resultType="int">
		select count(*)
		from bam_orde_rele bor 
		<![CDATA[where (bor.ALLO_STATUS is null)]]>
		and bor.supp_name=#{sapId}
		and bor.ortype in('Z001','Z008','Z009')
		and
		bor.zzoem = #{zzoem}
		<if test="orderRele.zzoem != null and orderRele.zzoem != '' ">
			and bor.zzoem like '%${orderRele.zzoem}%'
		</if>
		<if test="orderRele.contOrdeNumb != null and orderRele.contOrdeNumb != '' ">
			and bor.CONT_ORDE_NUMB like '%${orderRele.contOrdeNumb}%'
		</if>
		<if test="orderRele.startDate != null or orderRele.endDate != null ">
			and bor.sube_date between
			#{orderRele.startDate,jdbcType=VARCHAR} and
			#{orderRele.endDate,jdbcType=VARCHAR}
		</if>
	</select>
	<!-- 订单回退给供应商 -->
	<update id='setPaperDataFallback'>
		update BAM_ORDE_RELE set STATUS='已退回' where
		fid=#{fid}
	</update>
	<!-- 订单回签确认 -->
	<update id="setPaperDataConfirm">
		update BAM_ORDE_RELE set 
		STATUS='已确认' ,
		limit_than = #{limitThan}
		where
		fid=#{fid}
	</update>
	<update id="updateOrderStatusByfid" parameterType="Map">
		update
		BAM_ORDE_RELE
		<set>
			STATUS=#{status},
			<if test="userId != null">
				PUBLISH_ID = #{userId},
			</if>
			<if test="name != null">
				PUBLISH_NAME = #{name},
			</if>
		</set>
		where fid=#{fid}
	</update>
	<!-- 修改订单行项目已交未交数量 -->
	<update id='updateLineProject' parameterType="Map">
		update
		BAM_ORDE_MATE set QUAN_MATE=#{stra},UNPA_QUAN=#{strb}
		where
		MATE_NUMB=#{r.mateCode} and MAIN_ID=#{r.orderId} and
		frequency=#{r.frequency}
	</update>
	<select id='selectLineProject' resultType="com.faujor.entity.bam.ReceMate"
		resultMap="mates">
		select * from BAM_ORDE_MATE where main_id=#{orderId} and
		MATE_NUMB=#{mateCode} and frequency =#{frequency}
	</select>

	<select id="findOrderMateByOrderNoAndMateCodeAndFrequence" parameterType="String" resultMap="mates">
		select * from bam_orde_mate t where t.MATE_NUMB = #{1}
		and t.MAIN_ID = #{0} and t.FREQUENCY=#{2}
	</select>

	<select id="queryOrderMessListByOrderTypeAndSapId" parameterType="String" resultType="String">
		select r.cont_orde_numb  
		from bam_orde_rele r 
		where r.ortype=#{orderType} 
		and r.supp_name=#{sapId}
	</select>
	<resultMap type="com.faujor.entity.bam.OrderPackVO" id="OrderPackVOMap">
		<result property="oemOrderCode" column="cont_orde_numb"/>
		<result property="oemSuppName" column="supp_name"/>
		<result property="oemSapId" column="sap_id"/>
		<result property="subeDate" column="sube_Date"/>
		<result property="remarks" column="remarks"/>
		<result property="limitThan" column="limit_than"/>
	</resultMap>
	<select id="queryOrderMessageByOEMOrderCode" parameterType="String" resultMap="OrderPackVOMap">
		select r.cont_orde_numb,r.sube_date,
		r.limit_than,r.remarks,r.supp_name as sap_id,
		r.supp_numb as supp_name
		 from bam_orde_rele r 
		 where r.cont_orde_numb = #{oemOrderCode}
	</select>
	
	<update id="updateLimitThanOfOrder" parameterType="com.faujor.entity.bam.OrderRele">
		update BAM_ORDE_RELE set limit_than=#{limitThan} 
		where fid=#{fid}
	</update>
</mapper>