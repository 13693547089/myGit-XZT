<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.faujor.dao.master.bam.QuoteMapper">
	<resultMap id="quoteMap" type="com.faujor.entity.bam.Quote">
			<id property="id" column="id"/>
			<result property="quoteCode" column="quote_Code"/>
			<result property="quoteDate" column="quote_Date"/>
			<result property="status" column="status"/>
			<result property="suppNo" column="supp_No"/>
			<result property="suppName" column="supp_Name"/>
			<result property="quoteType" column="quote_Type"/>
			<result property="quoteTypeDesc" column="quote_Type_Desc"/>
			<result property="quoteBase" column="quote_Base"/>
			<result property="quoteBaseName" column="quoteBaseName"/>
			<result property="remark" column="remark"/>
			<result property="createUser" column="create_user"/>
			<result property="createTime" column="create_time"/>
			<result property="modifyUser" column="modify_user"/>
			<result property="modifyTime" column="modify_time"/>
			<result property="creater" column="creater"/>
			<result property="modifier" column="modifier"/>
			<result property="firstAuditor" column="first_Auditor"/>
			<result property="firstAuditDate" column="first_Audit_Date"/>
			<result property="validStart" column="valid_Start"/>
			<result property="validEnd" column="valid_End"/>
			<result property="quoteBaseTwo" column="quote_base_two"/>
			<result property="quoteBaseTwoName" column="quote_base_two_name"/>
			<result property="userType" column="user_type"/>
	</resultMap>
	<resultMap id="quoteAttrMap" type="com.faujor.entity.bam.QuoteAttr">
			<id property="id" column="id"/>
			<result property="quoteCode" column="quote_Code"/>
			<result property="attrFile" column="attr_File"/>
			<result property="remark" column="remark"/>
			<result property="attrIndex" column="attr_index"/>
	</resultMap>
	<insert id="saveQuote" parameterType="com.faujor.entity.bam.Quote">
		insert into bam_quote
		(id,quote_Code,quote_Date,status,
		supp_No,supp_Name,quote_Type,quote_Type_Desc,quote_Base,remark,
		create_user,create_time,modify_user,modify_time,creater,modifier,quote_base_two,user_type)
		values
		(#{id},#{quoteCode},#{quoteDate},#{status},
		#{suppNo},#{suppName},#{quoteType},#{quoteTypeDesc},#{quoteBase},#{remark},
		#{createUser},#{createTime},#{createUser},#{createTime},#{creater},#{modifier},#{quoteBaseTwo},
		#{userType})
	</insert>
	<delete id="delQuoteByCode" parameterType="String">
		delete from bam_quote where quote_Code=#{quoteCode}
	</delete>
	<update id="updateQuote" parameterType="com.faujor.entity.bam.Quote">
		update bam_quote set
			status=#{status},
			supp_No=#{suppNo},supp_Name=#{suppName}, quote_Type=#{quoteType},
			quote_Type_Desc=#{quoteTypeDesc},quote_Base=#{quoteBase},remark=#{remark},
			modify_user=#{modifyUser},modify_time=#{modifyTime},modifier=#{modifier},
			quote_Base_two=#{quoteBaseTwo}
		where quote_Code=#{quoteCode}
	</update>
	<update id="updateQuoteStatus" parameterType="com.faujor.entity.bam.Quote">
		update bam_quote
		<set>
			status=#{status},
			<if test="oaOpinion!=null and oaOpinion!=''">
			oa_opinion=#{oaOpinion},
			</if>
			<if test="firstAuditor!=null and firstAuditor!=''">
			first_Auditor=#{firstAuditor},
			</if>
			<if test="firstAuditor!=null and firstAuditor!=''">
			first_Audit_Date=#{firstAuditDate},
			</if>
			<if test="oaAuditDate!=null">
			oa_Audit_Date=#{oaAuditDate}
			</if>
		</set> 
		where quote_Code=#{quoteCode}
	</update>
	<select id="getQuoteByCode" parameterType="Map" resultMap="quoteMap">
		select t1.*,t2.real_name as quoteBaseName from bam_quote t1 
		left join doc_document t2 on t1.quote_base=t2.id
		where t1.quote_Code=#{quoteCode}
	</select>
	<select id="getQuoteByPage" resultMap="quoteMap" parameterType="Map">
		select * from (
			select tb.*,rownum  rn from
				(select bq.* from bam_quote bq 
				  where 1=1 
					<if test="suppName!=null and suppName!=''">
						and (bq.supp_No like #{suppName} or bq.supp_name like #{suppName})
					</if>
					<if test="quoteCode!=null and quoteCode!=''">
						and bq.quote_Code like #{quoteCode}
					</if>
					<if test="createTime!=null">
						and bq.create_time like to_date(#{createTime},'yyyy-mm-dd')
					</if>
					<if test="status!=null">
						and bq.status in
						<foreach collection="status" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					<if test="suppSapIds!=null">
						and bq.supp_No in
						<foreach collection="suppSapIds" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					and( bq.create_user=#{createUser} or bq.status!='已保存')
				order by bq.create_time desc) tb
		 	where rownum &lt;=#{page.to}) tb1
		where tb1.rn &gt; #{page.from}
	</select>
	<select id="getQuoteNum" resultType="Integer" parameterType="Map">
		select count(1) from bam_quote bq
		where 1=1 
		<if test="suppName!=null and suppName!=''">
			and (bq.supp_No like #{suppName} or bq.supp_name like #{suppName})
		</if>
		<if test="quoteCode!=null and quoteCode!=''">
			and bq.quote_Code like #{quoteCode}
		</if>
		<if test="createTime!=null">
			and bq.create_time like to_date(#{createTime},'yyyy-mm-dd')
		</if>
		<if test="status!=null">
			and bq.status in
			<foreach collection="status" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="suppSapIds!=null">
			and bq.supp_No in
			<foreach collection="suppSapIds" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		and( bq.create_user=#{createUser} or bq.status!='已保存')
	</select>
	<update id="updateValidDate" parameterType="Map">
		update bam_quote_mate t1 
		set t1.start_date=#{startDate},t1.end_date=#{endDate},t1.mate_reason=#{mateReason}
		where t1.id=#{id}
	</update>
	<select id="getQuoteById" parameterType="String" resultMap="quoteMap">
		select t1.*,t2.real_name as quoteBaseName from bam_quote t1 
		left join doc_document t2 on t1.quote_base=t2.id
		where t1.id=#{id}
	</select>
	<insert id="insertAttr">
		insert into bam_quote_attr(id,quote_code,attr_file,remark,attr_index) 
		values(#{id},#{quoteCode},#{attrFile},#{remark},#{attrIndex})
	</insert>
	<delete id="delAttr">
		delete from bam_quote_attr t1 where t1.id in
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	<select id="getQuoteAttrByQuoteCode" parameterType="String" resultMap="quoteAttrMap">
		select * from bam_quote_attr t1 where t1.quote_code=#{quoteCode} order by t1.attr_index
	</select>
	<delete id="delAttrByQuoteCode" parameterType="String">
		delete from bam_quote_attr where quote_code=#{quoteCode}
	</delete>
</mapper>